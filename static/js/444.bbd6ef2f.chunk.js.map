{"version":3,"file":"static/js/444.bbd6ef2f.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactFilter/ContactFilter.module.css?a140","components/ContactFilter/ContactFilter.js","webpack://goit-react-hw-08-phonebook/./src/components/Loder/Loader.module.css?d221","components/Loder/Loader.js","vievs/ContactView.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nexport const getContacts = state => state.items;\nexport const getFilter = state => state.filter;\nexport const getLoading = state => state.loadings;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport { FaPhoneAlt } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createContact } from 'redux/contacts/contacts-operation';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\n\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const keyEl = nanoid();\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setPhone(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const contactEl = { name, phone };\n    if (contacts.some(contact => contact.name === contactEl.name)) {\n      toast.error(`${contactEl.name} is already in contacts`);\n      reset();\n      return;\n    }\n    dispatch(createContact(contactEl));\n\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label htmlFor={keyEl} className={s.label}>\n        Name\n      </label>\n      <input\n        className={s.input}\n        onChange={handleChange}\n        id={keyEl}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label htmlFor={keyEl} className={s.label}>\n        Number\n      </label>\n      <input\n        className={s.input}\n        onChange={handleChange}\n        id={keyEl}\n        type=\"tel\"\n        name=\"number\"\n        value={phone}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button type=\"submit\" className={s.button}>\n        <FaPhoneAlt size=\"15\" fill=\"rgb(25, 22, 22)\" /> Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContact, deleteContact } from 'redux/contacts/contacts-operation';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilteredContacts);\n\n  const onDeleteTodo = id => dispatch(deleteContact(id));\n\n  useEffect(() => {\n    dispatch(getContact());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, phone }) => (\n        <li key={id} className={s.item}>\n          <p className={s.text}>\n            {name}:{phone}\n          </p>\n          <button\n            type=\"button\"\n            className={s.button}\n            onClick={() => onDeleteTodo(id)}\n          >\n            Delete <FaTrashAlt size=\"15\" fill=\"rgb(25, 22, 22)\" />\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ContactFilter_label__qRVzC\",\"input\":\"ContactFilter_input__8mWOi\"};","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/contacts-actions';\n// import { getContacts } from 'redux/contacts/contacts-selectors';\nimport s from './ContactFilter.module.css';\n\nfunction ContactFilter() {\n  // const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onChange = evt => {\n    // console.log(evt.target.value);\n    const input = evt.target.value;\n    dispatch(changeFilter(input));\n  };\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input type=\"text\" className={s.input} onChange={onChange} />\n    </label>\n  );\n}\n\nexport default ContactFilter;\n","// extracted by mini-css-extract-plugin\nexport default {\"gooey\":\"Loader_gooey__2QS5o\",\"dot\":\"Loader_dot__vNe5X\",\"dots\":\"Loader_dots__jPr9w\"};","import s from './Loader.module.css';\nfunction Loader() {\n  return (\n    <div className={s.gooey}>\n      <span className={s.dot}></span>\n      <div className={s.dots}>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n  );\n}\nexport default Loader;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getLoading } from 'redux/contacts/contacts-selectors';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactFilter from 'components/ContactFilter/ContactFilter';\nimport Loader from 'components/Loder/Loader';\n\nfunction ContactView() {\n  const isLoadingTodos = useSelector(getLoading);\n  return (\n    <div className=\"section\">\n      {isLoadingTodos && <Loader />}\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </div>\n      <div>\n        <h2>Contacts</h2>\n        <ContactFilter />\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n\nexport default ContactView;\n"],"names":["getContacts","state","items","getLoading","loadings","getFilteredContacts","createSelector","filter","contacts","contact","name","toLowerCase","includes","useState","setName","phone","setPhone","dispatch","useDispatch","useSelector","keyEl","nanoid","handleChange","evt","target","value","reset","onSubmit","preventDefault","contactEl","some","toast","createContact","className","s","htmlFor","onChange","id","type","pattern","title","required","size","fill","useEffect","getContact","map","onClick","deleteContact","onDeleteTodo","input","changeFilter","isLoadingTodos"],"sourceRoot":""}